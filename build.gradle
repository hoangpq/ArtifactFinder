/*
 * Copyright 2019 Google, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.3.50'
    ext.ktor_version = "1.2.4"
    ext.ktlint_version = '0.34.0'
    ext.libs = [
            junit                      : "junit:junit:4.12",
            truth                      : "com.google.truth:truth:1.0",
            kotlinRuntime              : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            kotlinSerialization        : 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.13.0',
            coroutines                 : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2',
            coroutinesTesting          : "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2",
            asm                        : "org.ow2.asm:asm-commons:7.1",
            kotlinMetadata             : "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.1.0",
            retrofit                   : 'com.squareup.retrofit2:retrofit:2.9.0-20200516.175725-14',
            jacksonKotlin              : 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9',
            jacksonXml                 : 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.9',
            mockWebServer              : 'com.squareup.okhttp3:mockwebserver:4.2.0',
            okHttp                     : 'com.squareup.okhttp3:okhttp:3.15.0-20190317.101826-17',
            guava                      : 'com.google.guava:guava:28.1-android',
            retrofitKotlinSerialization: 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.4.0',
            coroutinesSwing            : 'org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.3.2',
            xerial                     : 'org.xerial:sqlite-jdbc:3.28.0',
            ktor                       : "io.ktor:ktor-server-netty:$ktor_version",
            okHttpLogger               : "com.squareup.okhttp3:logging-interceptor:3.15.0-20190317.101907-17"
    ]
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0-alpha11'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
        classpath 'gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.4.10'
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.diffplug.gradle.spotless' version '3.25.0'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target 'src/**/*.kt'
            ktlint(ktlint_version).userData(['disabled_rules':'no-wildcard-imports'])
            licenseHeaderFile project.rootProject.file('scripts/copyright.kt')
        }
    }
}
